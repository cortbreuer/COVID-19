tempCountry[, "Cases"] <- cumsum(tempCountry$Cases)
tempCountry[, "Count"] <- "total"
lateCOVIDSum <- bind_rows(lateCOVIDSum, tempCountry)
}
lateCOVID <- bind_rows(lateCOVID, lateCOVIDSum)
upperCOVID <- filter(lateCOVID, Cases >= 900)
upperID <- unique(upperCOVID$GeoId)
lateCOVID <- filter(lateCOVID, GeoId %in% upperID)
background_lateCOVID <- select(lateCOVID, -"Countries")
##Daily values
ggplot(data = filter(lateCOVID, Count == "daily"),
mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "daily"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
#Mutate dataset to get total case data
lateCOVID <- COVID
lateCOVID <- mutate(lateCOVID, Count = "daily")
ID <- unique(lateCOVID$GeoId)
lateCOVIDSum <- data.frame()
for(i in 1:length(ID)){
tempCountry <- lateCOVID %>% filter(GeoId == ID[i]) %>% arrange(DateRep)
tempCountry[, "Cases"] <- cumsum(tempCountry$Cases)
tempCountry[, "Count"] <- "total"
lateCOVIDSum <- bind_rows(lateCOVIDSum, tempCountry)
}
lateCOVID <- bind_rows(lateCOVID, lateCOVIDSum)
upperCOVID <- filter(lateCOVID, Cases >= 1000)
upperID <- unique(upperCOVID$GeoId)
lateCOVID <- filter(lateCOVID, GeoId %in% upperID)
background_lateCOVID <- select(lateCOVID, -"Countries")
##Daily values
ggplot(data = filter(lateCOVID, Count == "daily"),
mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "daily"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
#Mutate dataset to get total case data
lateCOVID <- COVID
lateCOVID <- mutate(lateCOVID, Count = "daily")
ID <- unique(lateCOVID$GeoId)
lateCOVIDSum <- data.frame()
for(i in 1:length(ID)){
tempCountry <- lateCOVID %>% filter(GeoId == ID[i]) %>% arrange(DateRep)
tempCountry[, "Cases"] <- cumsum(tempCountry$Cases)
tempCountry[, "Count"] <- "total"
lateCOVIDSum <- bind_rows(lateCOVIDSum, tempCountry)
}
lateCOVID <- bind_rows(lateCOVID, lateCOVIDSum)
upperCOVID <- filter(lateCOVID, Cases >= 1200)
upperID <- unique(upperCOVID$GeoId)
lateCOVID <- filter(lateCOVID, GeoId %in% upperID)
background_lateCOVID <- select(lateCOVID, -"Countries")
##Daily values
ggplot(data = filter(lateCOVID, Count == "daily"),
mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "daily"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
#Mutate dataset to get total case data
lateCOVID <- COVID
lateCOVID <- mutate(lateCOVID, Count = "daily")
ID <- unique(lateCOVID$GeoId)
lateCOVIDSum <- data.frame()
for(i in 1:length(ID)){
tempCountry <- lateCOVID %>% filter(GeoId == ID[i]) %>% arrange(DateRep)
tempCountry[, "Cases"] <- cumsum(tempCountry$Cases)
tempCountry[, "Count"] <- "total"
lateCOVIDSum <- bind_rows(lateCOVIDSum, tempCountry)
}
lateCOVID <- bind_rows(lateCOVID, lateCOVIDSum)
upperCOVID <- filter(lateCOVID, Cases >= 1400)
upperID <- unique(upperCOVID$GeoId)
lateCOVID <- filter(lateCOVID, GeoId %in% upperID)
background_lateCOVID <- select(lateCOVID, -"Countries")
##Daily values
ggplot(data = filter(lateCOVID, Count == "daily"),
mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "daily"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
##Total values
ggplot(data = filter(lateCOVID, Count == "total"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "total"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
#Normalize start date
normalizedLateCOVID <- data.frame()
for(i in 1:length(upperID)){
tempLateCOVID <- filter(lateCOVID, GeoId == upperID[i]) %>% arrange(DateRep)
tempLateCOVID[, "timeSince"] <- difftime(tempLateCOVID$DateRep, tempLateCOVID$DateRep[1], units = "days")
normalizedLateCOVID <- rbind(normalizedLateCOVID, tempLateCOVID)
}
background_normalizedLateCOVID <- select(normalizedLateCOVID, -"Countries")
##Daily values
facetNormalizedCOVIDDaily <- ggplot(data = filter(normalizedLateCOVID, Count == "daily"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID, Count == "daily"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
ggsave(plot = facetNormalizedCOVIDDaily, here("figures", "2020-03-23_Facet_Daily-Cases.png"), width = 10, height = 7)
#Select for common start case number
lateCOVID100 <- filter(normalizedLateCOVID, Cases >= 100)
normalizedLateCOVID100 <- data.frame()
for(i in 1:length(upperID)){
tempLateCOVID100 <- filter(lateCOVID100, GeoId == upperID[i]) %>% arrange(DateRep)
tempLateCOVID100[, "timeSince"] <- difftime(tempLateCOVID100$DateRep, tempLateCOVID100$DateRep[1], units = "days")
normalizedLateCOVID100 <- rbind(normalizedLateCOVID100, tempLateCOVID100)
}
background_normalizedLateCOVID100 <- select(normalizedLateCOVID100, -"Countries")
##Total values
facetNormalizedCOVIDTotal_lin <- ggplot(data = filter(normalizedLateCOVID100, Count == "total"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID100, Count == "total"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlim(0, 30) +
xlab("")
facetNormalizedCOVIDTotal_exp <- ggplot(data = filter(normalizedLateCOVID100, Count == "total"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID100, Count == "total"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
scale_y_log10(breaks = c(100, 1000, 10000, 100000), limits = c(100, 100000)) +
annotation_logticks(sides="l") +
facet_wrap(. ~ Countries) +
xlim(0, 30) +
theme_bw() +
xlab("Days Since 100th Case")
ggsave(plot = facetNormalizedCOVIDTotal_lin, here("figures", "2020-03-23_Facet-Lin_Case-Total.png"), width = 10, height = 7)
ggsave(plot = facetNormalizedCOVIDTotal_exp, here("figures", "2020-03-23_Facet-Exp_Case-Total.png"), width = 10, height = 7)
##Total values
facetNormalizedCOVIDTotal_lin <- ggplot(data = filter(normalizedLateCOVID100, Count == "total"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID100, Count == "total"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlim(0, 22) +
xlab("")
facetNormalizedCOVIDTotal_exp <- ggplot(data = filter(normalizedLateCOVID100, Count == "total"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID100, Count == "total"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
scale_y_log10(breaks = c(100, 1000, 10000, 100000), limits = c(100, 100000)) +
annotation_logticks(sides="l") +
facet_wrap(. ~ Countries) +
xlim(0, 22) +
theme_bw() +
xlab("Days Since 100th Case")
ggsave(plot = facetNormalizedCOVIDTotal_lin, here("figures", "2020-03-23_Facet-Lin_Case-Total.png"), width = 10, height = 7)
ggsave(plot = facetNormalizedCOVIDTotal_exp, here("figures", "2020-03-23_Facet-Exp_Case-Total.png"), width = 10, height = 7)
##Daily values
facetNormalizedCOVIDDaily <- ggplot(data = filter(normalizedLateCOVID, Count == "daily"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID, Count == "daily"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("Days Since First Case")
ggsave(plot = facetNormalizedCOVIDDaily, here("figures", "2020-03-23_Facet_Daily-Cases.png"), width = 10, height = 7)
#Plot faceted daily and total case values for 6 countries
ggplot(data = filter(limitedCOVID, Count == "daily"),
mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_limitedCOVID, Count == "daily"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
#Plot faceted daily and total case values for 6 countries
ggplot(data = filter(limitedCOVID, Count == "daily"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_limitedCOVID, Count == "daily"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
#Limit dataset to 6 countries, mutate to get total case data
limitedCOVID <- filter(COVID, (GeoId %in% c('IT', 'ES', 'KR', 'US', 'FR', 'DE')) & (Month == c(2, 3)))
limitedCOVID <- mutate(limitedCOVID, Count = "daily")
ID <- unique(limitedCOVID$GeoId)
limitedCOVIDSum <- data.frame()
for(i in 1:length(ID)){
tempCountry <- limitedCOVID %>% filter(GeoId == ID[i]) %>% arrange(DateRep)
tempCountry[, "Cases"] <- cumsum(tempCountry$Cases)
tempCountry[, "Count"] <- "total"
limitedCOVIDSum <- bind_rows(limitedCOVIDSum, tempCountry)
}
limitedCOVID <- bind_rows(limitedCOVID, limitedCOVIDSum)
background_limitedCOVID <- select(limitedCOVID, -"Countries")
#Plot faceted daily and total case values for 6 countries
ggplot(data = filter(limitedCOVID, Count == "daily"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_limitedCOVID, Count == "daily"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
ggsave(plot = limitedCOVIDDaily, here("figures", "2020-03-23_Limited-Facet_Daily-Cases.png"), width = 10, height = 6)
#Plot faceted daily and total case values for 6 countries
limitedCOVIDDaily <- ggplot(data = filter(limitedCOVID, Count == "daily"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_limitedCOVID, Count == "daily"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
limitedCOVIDTotal <- ggplot(data = filter(limitedCOVID, Count == "total"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_limitedCOVID, Count == "total"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
ggsave(plot = limitedCOVIDDaily, here("figures", "2020-03-23_Limited-Facet_Daily-Cases.png"), width = 10, height = 6)
ggsave(plot = limitedCOVIDTotal, here("figures", "2020-03-23_Limited-Facet_Case-Total.png"), width = 10, height = 6)
#Plot faceted daily and total case values for 6 countries
limitedCOVIDDaily <- ggplot(data = filter(limitedCOVID, Count == "daily"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_limitedCOVID, Count == "daily"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
limitedCOVIDTotal <- ggplot(data = filter(limitedCOVID, Count == "total"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_limitedCOVID, Count == "total"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
limitedCOVIDTotal_exp <- ggplot(data = filter(limitedCOVID, Count == "total"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_limitedCOVID, Count == "total"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
scale_y_log10(breaks = c(1, 100, 1000, 10000, 50000), limits = c(1, 50000)) +
annotation_logticks(sides="l") +
theme_bw() +
xlab("")
ggsave(plot = limitedCOVIDTotal_exp, here("figures", "2020-03-23_Limited-Facet-Exp_Case-Total.png"), width = 10, height = 6)
here()
library(here)
source"scripts/getCases.R"
source"scripts/getCases.R")
source("scripts/getCases.R")
source(here("scripts", "getCases.R")
)
source(here("scripts", "getCases.R"))
install.packages("gganimate")
#Animate coronavirus case growth by continual plotting
library(tidyverse)
library(gghighlight)
library(scales)
library(here)
library(ggsci)
library(gganimate)
library(gifski)
install.packages("gifski")
library(gifski)
#
ggplot(data = COVID, mapping = aes(x = totalCases, y = Deaths)) + geom_point()
#Generate cumulative case sum datset
ID <- unique(COVID$GeoId)
caseSum <- data.frame()
for(i in 1:length(ID)){
tempCountry <- COVID %>% filter(GeoId == ID[i]) %>% arrange(DateRep)
tempCountry[, "totalCases"] <- cumsum(tempCountry$Cases)
caseSum <- rbind(caseSum, tempCountry)
}
COVID <- caseSum
#
ggplot(data = COVID, mapping = aes(x = totalCases, y = Deaths)) + geom_point()
#Generate cumulative case and death sum datset
ID <- unique(COVID$GeoId)
caseSum <- data.frame()
deathSum <- data.frame()
for(i in 1:length(ID)){
tempCountry <- COVID %>% filter(GeoId == ID[i]) %>% arrange(DateRep)
tempCountry[, "totalCases"] <- cumsum(tempCountry$Cases)
caseSum <- rbind(caseSum, tempCountry)
}
source(here("scripts", "getCases.R"))
COVID <- as_tibble(COVID)
#Generate cumulative case and death sum datset
ID <- unique(COVID$GeoId)
caseSum <- data.frame()
deathSum <- data.frame()
for(i in 1:length(ID)){
tempCountry <- COVID %>% filter(GeoId == ID[i]) %>% arrange(DateRep)
tempCountry[, "totalCases"] <- cumsum(tempCountry$Cases)
caseSum <- rbind(caseSum, tempCountry)
}
for(i in 1:length(ID)){
tempCountry <- caseSum %>% filter(GeoId == ID[i]) %>% arrange(DateRep)
tempCountry[, "totalDeaths"] <- cumsum(tempCountry$Deaths)
deathSum <- rbind(deathSum, tempCountry)
}
COVID <- deathSum
#
ggplot(data = COVID, mapping = aes(x = totalCases, y = Deaths)) + geom_point()
#
ggplot(data = COVID, mapping = aes(x = totalCases, y = totalDeaths)) + geom_point()
#
ggplot(data = COVID, mapping = aes(x = totalCases, y = totalDeaths, color = DateRep)) + geom_point()
#
ggplot(data = COVID, mapping = aes(x = max(totalCases), y = max(totalDeaths), color = DateRep)) + geom_point()
View(COVID)
currentCOVID <- filter(COVID, DateRep == "2020-03-24")
currentCOVID <- filter(COVID, DateRep == "2020-03-23")
currentCOVID <- filter(COVID, DateRep == 2020-03-23)
currentCOVID <- filter(COVID, DateRep = 2020-03-23)
View(COVID)
currentCOVID <- filter(COVID, DateRep == "2020-03-24")
currentCOVID
currentCOVID <- filter(COVID, DateRep == as.date("2020-03-24"))
library(lubridate)
library(lubridate)
currentCOVID <- filter(COVID, DateRep == as.date("2020-03-24"))
currentCOVID <- filter(COVID, DateRep == as.Date("2020-03-24"))
#
ggplot(data = currentCOVID, mapping = aes(x = totalCases, y = totalDeaths, color = DateRep)) + geom_point()
currentCOVID <- filter(COVID, (DateRep == as.Date("2020-03-24")) & (totalDeaths >= 1) & (totalCases >= 1))
#
ggplot(data = currentCOVID, mapping = aes(x = totalCases, y = totalDeaths, color = DateRep)) +
geom_point() +
scale_y_log10(breaks = c(1, 10, 100, 1000, 10000), limits = c(1, 10000)) +
scale_x_log10(breaks = c(1, 10, 100, 1000, 10000, 100000), limits = c(1, 100000)) +
annotation_logticks(sides="lb")
#
ggplot(data = currentCOVID, mapping = aes(x = Cases, y = totalCases, color = DateRep)) +
geom_point() +
scale_y_log10(breaks = c(1, 10, 100, 1000, 10000), limits = c(1, 10000)) +
annotation_logticks(sides="l")
logCOVID <- filter(COVID, (totalDeaths >= 1) & (totalCases >= 1))
#
ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = DateRep)) +
geom_point() +
scale_y_log10(breaks = c(1, 10, 100, 1000, 10000), limits = c(1, 10000)) +
annotation_logticks(sides="l")
#
ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = DateRep)) +
geom_point() +
scale_y_log10(breaks = c(1, 10, 100, 1000, 10000, 100000), limits = c(1, 100000)) +
annotation_logticks(sides="l")
#
ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = DateRep)) +
geom_point() +
scale_y_log10(breaks = c(1, 10, 100, 1000, 10000, 100000), limits = c(1, 100000)) +
annotation_logticks(sides="l") +
transition_time(DateRep)
library(gifski)
#
ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = DateRep)) +
geom_point() +
scale_y_log10(breaks = c(1, 10, 100, 1000, 10000, 100000), limits = c(1, 100000)) +
annotation_logticks(sides="l") +
transition_time(DateRep >= as.Date("2020-02-01"))
#
plot <- ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = DateRep)) +
geom_point() +
scale_y_log10(breaks = c(1, 10, 100, 1000, 10000, 100000), limits = c(1, 100000)) +
annotation_logticks(sides="l") +
transition_time(DateRep)
animate(plot)
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/animateCoronavirus.R')
source(here("scripts", "getCases.R"))
getwd()
setwd(./)
setwd(.)
setwd(../COVID-19)
setwd(".")
getwd()
setwd("..")
getwd()
source(here("scripts", "getCases.R"))
library(here)
library(lubridate)
source(here("scripts", "getCases.R"))
detach("package:lubridate", unload = TRUE)
detach("package:tidyverse", unload = TRUE)
source(here("scripts", "getCases.R"))
#Animate coronavirus case growth by continual plotting
library(tidyverse)
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/animateCoronavirus.R')
animate(plot)
#
plot <- ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = DateRep)) +
geom_point(alpha = .6, size = totalDeaths) +
scale_y_log10(breaks = c(1, 10, 100, 1000, 10000, 100000), limits = c(1, 100000)) +
annotation_logticks(sides="l") +
transition_time(DateRep)
#
plot <- ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = DateRep)) +
geom_point(aes(size = totalDeaths), alpha = .6) +
scale_y_log10(breaks = c(1, 10, 100, 1000, 10000, 100000), limits = c(1, 100000)) +
annotation_logticks(sides="l") +
transition_time(DateRep)
#
plot <- ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = DateRep)) +
geom_point(aes(size = totalDeaths), alpha = .6) +
scale_y_log10(breaks = c(1, 10, 100, 1000, 10000, 100000), limits = c(1, 100000)) +
annotation_logticks(sides="l")
plot
#
plot <- ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = DateRep)) +
geom_point(aes(size = totalDeaths), alpha = .6) +
annotation_logticks(sides="l")
plot
#
plot <- ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = DateRep)) +
geom_point(aes(size = totalDeaths), alpha = .6) +
annotation_ticks(sides="l")
#
plot <- ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = DateRep)) +
geom_point(aes(size = totalDeaths), alpha = .6) +
#transition_time(DateRep)
animate(plot)
#
plot <- ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = DateRep)) +
geom_point(aes(size = totalDeaths), alpha = .6) +
#transition_time(DateRep)
animate(plot)
#
plot <- ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = DateRep)) +
geom_point(aes(size = totalDeaths), alpha = .6)
plot
n
animate(plot)
#
plot <- ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = DateRep)) +
geom_point(aes(size = totalDeaths), alpha = .6) +
transition_time(DateRep)
animate(plot)
glimpse(COVID)
logCOVID <- filter(COVID, (Month == 3) & (totalDeaths >= 1) & (totalCases >= 1))
#
plot <- ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = DateRep)) +
geom_point(aes(size = totalDeaths), alpha = .6) +
transition_time(DateRep)
animate(plot)
#
ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = DateRep)) +
geom_point(aes(size = totalDeaths), alpha = .6)
#
ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = DateRep)) +
geom_point(aes(size = totalDeaths), alpha = .6) +
scale_x_log10(breaks = c(1, 10, 100, 1000, 10000), limits = c(1, 10000)) +
annotation_logticks(sides="l")
#
ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = DateRep)) +
geom_point(aes(size = totalDeaths), alpha = .6) +
scale_x_log10(breaks = c(1, 10, 100, 1000, 10000), limits = c(1, 10000)) +
annotation_logticks(sides="b")
glimpse(COVID)
#
ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = totalDeaths)) +
geom_line(aes(), alpha = .6)
#
ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = totalDeaths, group = Countries)) +
geom_line(aes(), alpha = .6)
#
ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = totalDeaths, group = Countries)) +
geom_line(aes(), alpha = .6) + transition_time(DateRep)
#
ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = totalDeaths, group = Countries)) +
geom_point(aes(), alpha = .6) #+ transition_time(DateRep)
#
ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = totalDeaths, group = Countries)) +
geom_point(size = 4, alpha = .6) #+ transition_time(DateRep)
#
ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = totalDeaths, group = Countries)) +
geom_point(size = 6, alpha = .6) #+ transition_time(DateRep)
#
ggplot(data = logCOVID, mapping = aes(x = Cases, y = totalCases, color = totalDeaths, group = Countries)) +
geom_point(size = 6, alpha = .6) + transition_time(DateRep)
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/facetCOVIDCharts.R')
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/facetCOVIDCharts.R')
limitedCOVID
max(limitedCOVID)
max(limitedCOVID$Cases)
View(limitedCOVID)
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/getCases.R')
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/facetCOVIDCharts.R')
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/facetCOVIDCharts.R')
max(limitedCOVID$Cases)
max(lateCOVID$Cases)
lateCOVID$Cases
lateCOVID100$Cases
limitedCOVID$Cases
sum(5210  4789  6557  5322  3526  6230  2547  2313  1797  1247   769   667   561
[69]   250    93    53    14)
sum(5210  4789  6557  5322  3526  6230  2547  2313  1797  1247   769   667   561
250    93    53    14)
sum(5210  4789  6557  5322  3526  6230  2547  2313  1797  1247   769   667   561
250    93    53    14)
sum(5210  4789  6557  5322  3526  6230  2547  2313  1797  1247   769   667   561    250    93    53    14)
sum(5210, 4789, 6557, 5322, 3526, 6230, 2547, 2313, 1797, 1247, 769, 667, 561, 250, 93, 53, 14)
filter(limitedCOVID, GeoId == "IT")
filter(COVID, GeoId == "IT")
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/facetCOVIDCharts.R')
format(Sys.time(), "%Y-%m-%d"
)
#create the URL where the dataset is updated daily
url <- paste("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide-", format(Sys.time(), "%Y-%m-%d", ".xlsx", sep = "")
)
#create the URL where the dataset is updated daily
url <- paste("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide-", format(Sys.time(), "%Y-%m-%d"), ".xlsx", sep = "")
url
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/getCases.R')
COVID
filter(COVID, GeoId =="IT")
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/facetCOVIDCharts.R')
