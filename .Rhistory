ggplot(data = limitedCaseSum)) + geom_line(mapping = aes(x = DateRep, y = Cases)) + geom_line(mapping = aes(x = DateRep, y = totalCases))
ggplot(data = limitedCaseSum) + geom_line(mapping = aes(x = DateRep, y = Cases)) + geom_line(mapping = aes(x = DateRep, y = totalCases))
ID <- unique(limitedCOVID$GeoId)
caseSum <- data.frame()
for(i in 1:length(ID)){
tempCountry <- limitedCOVID %>% filter(GeoId == ID[i]) %>% arrange(DateRep)
tempCountry[, "totalCases"] <- cumsum(tempCountry$Cases)
limitedCaseSum <- rbind(caseSum, tempCountry)
}
ggplot(data = limitedCaseSum) + geom_line(mapping = aes(x = DateRep, y = Cases)) + geom_line(mapping = aes(x = DateRep, y = totalCases))
ggplot(data = limitedCaseSum) + geom_line(mapping = aes(x = DateRep, y = Cases)) +
geom_line(mapping = aes(x = DateRep, y = totalCases)) + scale_y_continuous(sec.axis = sec_axis(~.*5))
ggplot(data = limitedCaseSum) + geom_line(mapping = aes(x = DateRep, y = Cases)) +
geom_bar(mapping = aes(x = DateRep, y = totalCases)) + scale_y_continuous(sec.axis = sec_axis(~.*5))
ggplot(data = limitedCaseSum) + geom_line(mapping = aes(x = DateRep, y = Cases)) +
geom_bar(mapping = aes(x = DateRep, y = totalCases), stat = "identity") + scale_y_continuous(sec.axis = sec_axis(~.*5))
ggplot(data = limitedCaseSum) + geom_line(mapping = aes(x = DateRep, y = Cases)) +
geom_bar(mapping = aes(x = DateRep, y = totalCases), stat = "identity") + scale_y_log10(breaks = c(100, 1000, 10000, 100000)) + scale_y_continuous(sec.axis = sec_axis(~.*5))
ggplot(data = limitedCaseSum) + geom_line(mapping = aes(x = DateRep, y = Cases)) +
geom_bar(mapping = aes(x = DateRep, y = totalCases), stat = "identity") + scale_y_log10s(sec.axis = sec_axis(~.*5))
ggplot(data = limitedCaseSum) + geom_line(mapping = aes(x = DateRep, y = Cases)) +
geom_bar(mapping = aes(x = DateRep, y = totalCases), stat = "identity") + scale_y_log10(sec.axis = sec_axis(~.*5))
ggplot(data = limitedCaseSum) + geom_line(mapping = aes(x = DateRep, y = Cases)) +
geom_bar(mapping = aes(x = DateRep, y = totalCases), stat = "identity") + scale_y_continuous(sec.axis = sec_axis(~.*5))
ggplot(data = limitedCaseSum) + geom_line(mapping = aes(x = DateRep, y = totalCases)) +
geom_bar(mapping = aes(x = DateRep, y = Cases), stat = "identity") + scale_y_continuous(sec.axis = sec_axis(~.*5))
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = background_limitedCOVID, color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
test <- mutate(limitedCOVID, Count = "daily")
summarize(test)
glimpse(test)
limitedCOVID <- mutate(limitedCOVID, Count = "daily")
testnew <- limitedCOVID
testnew[, "Count"] <- "total"
glimpse(testnew)
limitedCOVID <- mutate(limitedCOVID, Count = "daily")
ID <- unique(limitedCOVID$GeoId)
limitedCOVIDSum <- data.frame()
for(i in 1:length(ID)){
tempCountry <- limitedCOVID %>% filter(GeoId == ID[i]) %>% arrange(DateRep)
tempCountry[, "Cases"] <- cumsum(tempCountry$Cases)
tempCountry[, "Count"] <- "total"
limitedCOVIDSum <- bind_rows(limitedCOVIDSum, tempCountry)
}
view(limitedCOVIDSum)
limitedCOVID <- bind_rows(limitedCOVID, limitedCOVIDSum)
view(limitedCOVID)
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = background_limitedCOVID, color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
ggplot(data = filter(limitedCOVID, Count = "daily"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = background_limitedCOVID, color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
ggplot(data = filter(limitedCOVID, Count == "daily"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = background_limitedCOVID, color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
limitedCOVID <- bind_rows(limitedCOVID, limitedCOVIDSum)
background_limitedCOVID <- select(limitedCOVID, -"Countries")
ggplot(data = filter(limitedCOVID, Count == "daily"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = background_limitedCOVID, color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
ggplot(data = filter(limitedCOVID, Count == "daily"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_limitedCOVID, Count == "daily"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
ggplot(data = filter(limitedCOVID, Count == "total"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_limitedCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
#Plot faceted daily and total case values
ggplot(data = filter(lateCOVID, Count == "daily"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "daily"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
#Mutate dataset to get total case data
lateCOVID <- filter(COVID, (Month == c(2, 3)))
lateCOVID <- mutate(lateCOVID, Count = "daily")
ID <- unique(lateCOVID$GeoId)
lateCOVIDSum <- data.frame()
for(i in 1:length(ID)){
tempCountry <- lateCOVID %>% filter(GeoId == ID[i]) %>% arrange(DateRep)
tempCountry[, "Cases"] <- cumsum(tempCountry$Cases)
tempCountry[, "Count"] <- "total"
lateCOVIDSum <- bind_rows(lateCOVIDSum, tempCountry)
}
lateCOVID <- bind_rows(lateCOVID, lateCOVIDSum)
background_lateCOVID <- select(lateCOVID, -"Countries")
#Plot faceted daily and total case values
ggplot(data = filter(lateCOVID, Count == "daily"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "daily"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
summary(lateCOVID)
upperCOVID <- filter(lateCOVID, Cases >= 500)
upperID <- unique(upperCOVID$GeoId)
lateCOVID <- filter(lateCOVID, GeoId %in% upperID)
unique(lateCOVID$GeoIe)
unique(lateCOVID$GeoId)
background_lateCOVID <- select(lateCOVID, -"Countries")
#Plot faceted daily and total case values
ggplot(data = filter(lateCOVID, Count == "daily"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "daily"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
ggplot(data = filter(lateCOVID, Count == "total"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
#Normalize start date
normalizedLateCOVID <- data.frame()
#Normalize start date
normalizedLateCOVID <- data.frame()
for(i in 1:length(upperID)){
tempLateCOVID <- filter(lateCOVID, GeoId == upperID[i]) %>% arrange(DateRep)
tempLateCOVID[, "timeSince"] <- difftime(tempLateCOVID$DateRep, tempLateCOVID$DateRep[1], units = "days")
normalizedLateCOVID <- rbind(normalizedLateCOVID, tempLateCOVID)
}
background_normalizedLateCOVID <- select(normalizedLateCOVID, -"Countries")
ggplot(data = filter(normalizedLateCOVID, Count == "total"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
ggplot(data = filter(normalizedLateCOVID, Count == "total"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
for(i in 1:length(upperID)){
tempLateCOVID <- filter(lateCOVID, GeoId == upperID[i]) %>% arrange(DateRep)
tempLateCOVID[, "timeSince"] <- difftime(tempLateCOVID$DateRep, tempLateCOVID$DateRep[1], units = "days")
normalizedLateCOVID <- rbind(normalizedLateCOVID, tempLateCOVID)
}
background_normalizedLateCOVID <- select(normalizedLateCOVID, -"Countries")
ggplot(data = filter(normalizedLateCOVID, Count == "total"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
View(normalizedLateCOVID)
ggplot(data = filter(normalizedLateCOVID, Count == "total"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
ggplot(data = filter(normalizedLateCOVID, Count == "total"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
ggplot(data = filter(normalizedLateCOVID, Count == "total"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
##Daily values
ggplot(data = filter(normalizedLateCOVID, Count == "daily"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
##Daily values
ggplot(data = filter(normalizedLateCOVID, Count == "daily"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID, Count == "daily"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
##Total values
ggplot(data = filter(normalizedLateCOVID, Count == "total"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("") + scale_y_log10(breaks = c(100, 1000, 10000, 100000)) + annotation_logticks(sides="l")
##Total values
ggplot(data = filter(normalizedLateCOVID, Count == "total"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("") + scale_y_log10(breaks = c(100, 1000, 10000, 100000)) + annotation_logticks(sides="l") + ylim(1, 100000)
##Total values
ggplot(data = filter(normalizedLateCOVID, Count == "total"),
mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID, Count == "total"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
scale_y_log10(breaks = c(100, 1000, 10000, 100000), limits = c(1, 100000)) +
annotation_logticks(sides="l") + ylim(1, 100000) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
##Total values
ggplot(data = filter(normalizedLateCOVID, Count == "total"),
mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID, Count == "total"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
scale_y_log10(breaks = c(100, 1000, 10000, 100000), limits = c(1, 100000)) +
annotation_logticks(sides="l") + ylim(1, 100000) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
##Total values
ggplot(data = filter(normalizedLateCOVID, Count == "total"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID, Count == "total"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
scale_y_log10(breaks = c(100, 1000, 10000, 100000), limits = c(1, 100000)) +
annotation_logticks(sides="l") + ylim(1, 100000) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
#Plot cumulative case curves for all countries in datset
ggplot(data = caseSum, mapping = aes(x = DateRep, y = totalCases, group = GeoId, color = GeoId)) +
geom_line() + gghighlight(GeoId == c('US', 'ES', 'IT'))
getwd()
setwd("Desktop/Storage/Research/Computational/R/COVID-19"
)
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/facetCOVIDCharts.R')
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/facetCOVIDCharts.R')
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/facetCOVIDCharts.R')
View(COVID)
names(COVID)[names(COVID) == 'countriesAndTerritories'] <- 'Countries'
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/facetCOVIDCharts.R')
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/loglogAnimation.R')
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/loglogAnimation.R')
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/loglogAnimation.R')
loglogCasePlot <- ggplot(data = COVID) +
geom_point(mapping = aes(x = totalCases, y = dailyCases, color = geoId)) +
geom_line(mapping = aes(x = totalCases, y = dailyCases, color = geoId)) +
scale_y_log10(limits = c(10, 20000)) +
scale_x_log10(limits = c(10, 150000)) +
annotation_logticks(sides="lb") +
transition_reveal(dateRep)
animate(loglogCasePlot, renderer = gifski_renderer(loop = F), end_pause = 60, width = 800, height = 600)
anim_save("../figures/loglogCasePlot.gif")
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/facetCOVIDCharts.R')
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/loglogAnimation.R')
loglogCasePlot
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/loglogAnimation.R')
#Read location mobility data into R from Descartes Labs
library(httr)
url <- "https://github.com/descarteslabs/DL-COVID-19/blob/master/DL-us-mobility-daterow.csv"
mobility <- read.csv(text = GET(url))
url <- "https://raw.githubusercontent.com/descarteslabs/DL-COVID-19/master/DL-us-mobility-daterow.csv"
mobility <- read.csv(text = GET(url))
mobility <- read.csv(text = GET("https://raw.githubusercontent.com/descarteslabs/DL-COVID-19/master/DL-us-mobility-daterow.csv"))
mobility <- read.csv(GET("https://raw.githubusercontent.com/descarteslabs/DL-COVID-19/master/DL-us-mobility-daterow.csv"))
#Read location mobility data into R from Descartes Labs
library(RCurl)
url <- getURL("https://raw.githubusercontent.com/descarteslabs/DL-COVID-19/master/DL-us-mobility-daterow.csv")
mobility <- read.csv(text = url)
mobility
View(mobility)
stateMobility <- filter(mobility, admin_level == 1)
countyMobility <- filter(mobility, admin_level == 2)
View(stateMobility)
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, color = admin1)) + geom_line()
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, color = admin1)) + geom_point()
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, color = admin1)) + geom_line()
glympse(stateMobility)
glimpse(stateMobility)
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, color = admin1)) + geom_line(group = 1)
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, color = admin1)) + geom_line(group = 50)
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, linetype = admin1)) + geom_line()
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, linetype = factor(admin1))) + geom_line()
View(stateMobility)
View(stateMobility)
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, color = fips)) + geom_line()
mobility <- mutate(date = as.Date(date))
library(lubridate)
mobility <- mutate(date = as.Date(date))
library(anydate)
install.packages("anytime")
library(anytime)
mobility <- mutate(date = anytime(date))
url <- getURL("https://raw.githubusercontent.com/descarteslabs/DL-COVID-19/master/DL-us-mobility-daterow.csv")
mobility <- read_csv(text = url)
mobility <- read_csv(url)
View(mobility)
mobility
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, color = admin1)) + geom_line()
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, color = admin1)) + geom_line(group = 1)
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, group = admin1)) + geom_line(group = 1)
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, group = admin1)) + geom_line()
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, group = admin1, color = admin1)) + geom_line()
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, group = admin1, color = admin1)) + geom_ribbon()
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, group = admin1, color = admin1)) + geom_path()
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, group = admin1, color = admin1)) + geom_smooth()
ggplot(data = stateMobility, mapping = aes(x = date, y = admin1, fill = m50)) + geom_tile()
library(ggsci)
ggplot(data = stateMobility, mapping = aes(x = date, y = admin1, fill = m50)) +
geom_tile() +
scale_color_jco()
ggplot(data = stateMobility, mapping = aes(x = date, y = admin1, fill = m50)) +
geom_tile() +
scale_fill_jco()
ggplot(data = stateMobility, mapping = aes(x = date, y = admin1, fill = m50)) +
geom_tile() +
scale_color_brewer("Spectral")
ggplot(data = stateMobility, mapping = aes(x = date, y = admin1, fill = m50)) +
geom_tile() +
theme_bw() +
scale_color_gradientn("#e7f0fa","#c9e2f6","#95cbee","#0099dc","#4ab04a", "#ffd73e","#eec73a","#e29421","#f05336","#ce472e")
ggplot(data = stateMobility, mapping = aes(x = date, y = admin1, fill = m50)) +
geom_tile() +
theme_bw() +
scale_color_gradientn(colors = c("#e7f0fa","#c9e2f6","#95cbee","#0099dc","#4ab04a", "#ffd73e","#eec73a","#e29421","#f05336","#ce472e"))
ggplot(data = stateMobility, mapping = aes(x = date, y = admin1, fill = m50)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colors = c("#e7f0fa","#c9e2f6","#95cbee","#0099dc","#4ab04a", "#ffd73e","#eec73a","#e29421","#f05336","#ce472e"))
ggplot(data = stateMobility, mapping = aes(x = date, y = admin1, fill = m50_index)) +
geom_tile() +
theme_bw() +
scale_fill_gradientn(colors = c("#e7f0fa","#c9e2f6","#95cbee","#0099dc","#4ab04a", "#ffd73e","#eec73a","#e29421","#f05336","#ce472e"))
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, group = admin1, color = admin1)) + geom_smooth()
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, group = admin1, color = admin1)) + geom_line()
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, group = admin1, color = admin1)) +
geom_line(show.legend = FALSE)
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, group = admin1, color = admin1)) +
geom_line(show.legend = FALSE) +
theme_bw()
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, group = admin1, color = admin1)) +
geom_line(show.legend = FALSE) +
theme_bw() +
scale_color_jco()
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, group = admin1, color = admin1)) +
geom_line(show.legend = FALSE) +
theme_bw() +
scale_color_viridis(option="viridis")
library(viridis)
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, group = admin1, color = admin1)) +
geom_line(show.legend = FALSE) +
theme_bw() +
scale_color_viridis(option="viridis")
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, group = admin1, color = admin1)) +
geom_line(show.legend = FALSE) +
theme_bw() +
scale_color_viridis()
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, group = admin1, color = admin1)) +
geom_line(show.legend = FALSE) +
theme_bw() +
scale_color_viridis(discrete = FALSE)
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, group = admin1, color = admin1)) +
geom_line(show.legend = FALSE) +
theme_bw() +
scale_fill_viridis()
ggplot(data = stateMobility, mapping = aes(x = date, y = admin1, fill = m50_index)) +
geom_tile() +
theme_bw() +
scale_fill_viridis()
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, group = admin1, color = admin1)) +
geom_line(show.legend = FALSE) +
theme_bw() +
scale_color_viridis()
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, group = admin1, color = admin1)) +
geom_line(show.legend = FALSE) +
theme_bw() +
scale_color_viridis(discrete = TRUE)
ggplot(data = stateMobility, mapping = aes(x = date, y = admin1, fill = m50_index)) +
geom_tile() +
theme_bw() +
scale_fill_viridis()
ggplot(data = stateMobility, mapping = aes(x = date, y = m50_index, group = admin1, color = admin1)) +
geom_line(show.legend = FALSE) +
theme_bw() +
scale_color_viridis(discrete = TRUE)
ggplot(data = stateMobility, mapping = aes(x = date, y = admin1, fill = m50_index)) +
geom_tile() +
theme_bw() +
scale_fill_viridis()
View(stateMobility)
ggplot() + geom_map()
ggplot(data = stateMobility) + geom_map()
ggplot(data = stateMobility) + geom_map(mapping = aes(x = long, y = lat))
ggplot(data = stateMobility) + geom_map(map = us)
library(mapdata)
install.packages("mapdata")
library(mapdata)
us <- map_data("state")
ggplot() + geom_map(map = us)
ggplot(data = us) + geom_map(map = us)
ggplot(data = us) + geom_map(map = us, map_id = region)
us
ggplot(data = us) + geom_map(x = long, y = lat, map_id = region)
ggplot(data = us) + geom_map(map = us, mapping = aes(map_id = region))
ggplot(data = us) + geom_map(map = us, mapping = aes(map_id = region), color="#2b2b2b", fill=NA, size=0.15)
state <- map_data("state")
county <- map_data("county")
usa <- map_data("usa")
gg <- ggplot()
gg <- gg + geom_map(data=county, map=county,
aes(long, lat, map_id=region),
color="#2b2b2b", fill=NA, size=0.15)
gg <- gg + geom_map(data=state, map=state,
aes(long, lat, map_id=region),
color="#2166ac", fill=NA, size=0.5)
gg <- gg + geom_map(data=usa, map=usa,
aes(long, lat, map_id=region),
color="#4d9221", fill=NA, size=1)
gg <- gg + coord_map("polyconic")
gg <- gg + theme_map()
gg <- gg + theme(plot.margin=margin(20,20,20,20))
gg
install.packages("mapproj")
library(mapproj)
gg <- gg + geom_map(data=state, map=state,
aes(long, lat, map_id=region),
color="#2166ac", fill=NA, size=0.5)
gg <- gg + geom_map(data=usa, map=usa,
aes(long, lat, map_id=region),
color="#4d9221", fill=NA, size=1)
gg <- gg + coord_map("polyconic")
gg <- gg + theme_map()
gg <- gg + theme(plot.margin=margin(20,20,20,20))
gg
state <- map_data("state")
county <- map_data("county")
usa <- map_data("usa")
gg <- ggplot()
gg <- gg + geom_map(data=county, map=county,
aes(long, lat, map_id=region),
color="#2b2b2b", fill=NA, size=0.15)
gg <- gg + geom_map(data=state, map=state,
aes(long, lat, map_id=region),
color="#2166ac", fill=NA, size=0.5)
gg <- gg + geom_map(data=usa, map=usa,
aes(long, lat, map_id=region),
color="#4d9221", fill=NA, size=1)
gg <- gg + theme_map()
gg <- gg + theme(plot.margin=margin(20,20,20,20))
gg
state <- map_data("state")
county <- map_data("county")
usa <- map_data("usa")
gg <- ggplot()
gg <- gg + geom_map(data=county, map=county,
aes(long, lat, map_id=region),
color="#2b2b2b", fill=NA, size=0.15)
gg <- gg + geom_map(data=state, map=state,
aes(long, lat, map_id=region),
color="#2166ac", fill=NA, size=0.5)
gg <- gg + geom_map(data=usa, map=usa,
aes(long, lat, map_id=region),
color="#4d9221", fill=NA, size=1)
gg
state <- map_data("state")
county <- map_data("county")
usa <- map_data("usa")
gg <- ggplot()
#gg <- gg + geom_map(data=county, map=county,
#aes(long, lat, map_id=region),
#color="#2b2b2b", fill=NA, size=0.15)
gg <- gg + geom_map(data=state, map=state,
aes(long, lat, map_id=region),
color="#2166ac", fill=NA, size=0.5)
gg <- gg + geom_map(data=usa, map=usa,
aes(long, lat, map_id=region),
color="#4d9221", fill=NA, size=1)
gg
state <- map_data("state")
county <- map_data("county")
usa <- map_data("usa")
gg <- ggplot()
#gg <- gg + geom_map(data=county, map=county,
#aes(long, lat, map_id=region),
#color="#2b2b2b", fill=NA, size=0.15)
gg <- gg + geom_map(data=state, map=state,
aes(long, lat, map_id=region),
color="#2b2b2b", fill=NA, size=0.5)
gg <- gg + geom_map(data=usa, map=usa,
aes(long, lat, map_id=region),
color="#2b2b2b", fill=NA, size=0.5)
gg
ggplot() + geom_map(data=state, map=state, aes(long, lat, map_id=region), color="#2b2b2b", fill=NA, size=0.5) +
geom_map(data=usa, map=usa, aes(long, lat, map_id=region), color="#2b2b2b", fill=NA, size=0.5)
ggplot() + geom_map(data=state, map=state, aes(long, lat, map_id=region), color="#2b2b2b", fill=NA, size=0.5) +
geom_map(data = c(usa, stateMobility), map=usa, aes(long, lat, map_id=region), color="#2b2b2b", fill=NA, size=0.5)
stateMob <- rbind(stateMobility, state, us)
stateMob <- rbind.fill(stateMobility, state, us)
stateMob <- bind_rows(stateMobility, state, us)
stateMob
ggplot() + geom_polygon(data = us_states, mapping = aes(x = long, y = lat, group = group), fill = "white", color = "black")
ggplot() + geom_polygon(data = state, mapping = aes(x = long, y = lat, group = group), fill = "white", color = "black")
ggplot() + geom_polygon(data = state, mapping = aes(x = long, y = lat, group = group), fill = "white", color = "black") +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
ggplot() + geom_polygon(data = state, mapping = aes(x = long, y = lat, group = group), fill = "white", color = "black") +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme_bw()
View(state)
stateMobility <- rename("region" = "admin1")
stateMobility <- rename(stateMobility, "region" = "admin1")
stateMobility$region <- tolower(stateMobility$region)
stateMob <- left_join(states, stateMobility)
stateMob <- left_join(state, stateMobility)
View(stateMob)
ggplot() + geom_polygon(data = stateMob, mapping = aes(x = long, y = lat, group = group, fill = m50), color = "black") +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme_bw()
ggplot(data = filter(stateMob, date = as.Date("2020-03-01")), mapping = aes(x = long, y = lat, group = group, fill = m50_index)) +
geom_polygon(color = "black") +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme_bw()
ggplot(data = filter(stateMob, date == as.Date("2020-03-01")), mapping = aes(x = long, y = lat, group = group, fill = m50_index)) +
geom_polygon(color = "black") +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme_bw()
ggplot(data = filter(stateMob, date == "2020-03-01"), mapping = aes(x = long, y = lat, group = group, fill = m50_index)) +
geom_polygon(color = "black") +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme_bw()
ggplot(data = filter(stateMob, date == "2020-03-028"), mapping = aes(x = long, y = lat, group = group, fill = m50_index)) +
geom_polygon(color = "black") +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme_bw()
ggplot(data = filter(stateMob, date == "2020-03-025"), mapping = aes(x = long, y = lat, group = group, fill = m50_index)) +
geom_polygon(color = "black") +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme_bw()
ggplot(data = filter(stateMob, date == "2020-03-25"), mapping = aes(x = long, y = lat, group = group, fill = m50_index)) +
geom_polygon(color = "black") +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme_bw()
first <- filter(stateMob, date == "2020-03-01")
last <- filter(stateMob, date == "2020-03-26")
delta <- first$m50_index - last$m50_index
delta
stateMob[, "delta"] <- delta
stateMobDelta <- filter(stateMob, date == "2020-03-01")
stateMobDelta[, "delta"] <- delta
ggplot(data = stateMobDelta, mapping = aes(x = long, y = lat, group = group, fill = delta)) +
geom_polygon(color = "black") +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme_bw()
delta <- (first$m50_index - last$m50_index)/first$m50_index
stateMobDelta[, "delta"] <- delta
ggplot(data = stateMobDelta, mapping = aes(x = long, y = lat, group = group, fill = delta)) +
geom_polygon(color = "black") +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme_bw()
