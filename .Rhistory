tempDeaths <- filter(oneDeath, GeoId == oneID[2]) %>% arrange(DateRep)
tempDeaths[, "timeSince"] <- difftime(oneDeath$DateRep, oneDeath$DateRep[1], units = "days")
tempDeaths
tempDeaths[, "timeSince"] <- difftime(tempDeaths$DateRep, tempDeaths$DateRep[1], units = "days")
for(i in 1:length(oneID)){
tempDeaths <- filter(oneDeath, GeoId == oneID[i]) %>% arrange(DateRep)
tempDeaths[, "timeSince"] <- difftime(tempDeaths$DateRep, tempDeaths$DateRep[1], units = "days")
normalizedDeathDate <- rbind(normalizedDeathDate, tempDeaths)
}
#Normalize dates in dataset to first death
oneDeath <- filter(deathSum, Deaths >= 1)
oneID <- unique(oneDeath$GeoId)
normalizedDeathDate <- data.frame()
for(i in 1:length(oneID)){
tempDeaths <- filter(oneDeath, GeoId == oneID[i]) %>% arrange(DateRep)
tempDeaths[, "timeSince"] <- difftime(tempDeaths$DateRep, tempDeaths$DateRep[1], units = "days")
normalizedDeathDate <- rbind(normalizedDeathDate, tempDeaths)
}
#Normalize dates in dataset to first death
oneDeath <- filter(deathSum, totalDeaths >= 1)
oneID <- unique(oneDeath$GeoId)
normalizedDeathDate <- data.frame()
for(i in 1:length(oneID)){
tempDeaths <- filter(oneDeath, GeoId == oneID[i]) %>% arrange(DateRep)
tempDeaths[, "timeSince"] <- difftime(tempDeaths$DateRep, tempDeaths$DateRep[1], units = "days")
normalizedDeathDate <- rbind(normalizedDeathDate, tempDeaths)
}
ggplot(data = normalizedDeathDate, mapping = aes(x = timeSince, y = totalDeaths, group = GeoId, color = GeoId)) +
geom_line() + geom_point() + gghighlight(GeoId == 'IT') + xlim(0, 30) + theme_bw()
ggplot(data = normalizedDeathDate, mapping = aes(x = timeSince, y = totalDeaths, group = GeoId, color = GeoId)) +
geom_line() + geom_point() + gghighlight(GeoId == 'IT') + theme_bw()
#Plot curves for normalized death totals by first death date
ggplot(data = normalizedDeathDate, mapping = aes(x = timeSince, y = totalDeaths, group = GeoId, color = GeoId)) +
geom_line() + geom_point() + gghighlight(GeoId == 'IT') + theme_bw() + scale_y_log10(breaks = c(1, 10, 100, 1000, 10000)) + annotation_logticks(sides="l")
ggplot() + geom_line(data = normalizedDeathDate, mapping = aes(x = timeSince, y = totalDeaths, group = GeoId, color = GeoId)) +
geom_point(data = normalizedDeathDate, mapping = aes(x = timeSince, y = totalDeaths, group = GeoId, color = GeoId)) +
gghighlight(GeoId == 'IT') + scale_y_log10(breaks = c(1, 10, 100, 1000, 10000)) + annotation_logticks(sides="l") +
geom_line(data = third, mapping = aes(x = day, y = growth)) + theme_bw()
#Generate constant growth vectors
day <- seq(0, 60, 1)
third <- data.frame(day = day, growth = ((4/3)^day))
ggplot() + geom_line(data = normalizedDeathDate, mapping = aes(x = timeSince, y = totalDeaths, group = GeoId, color = GeoId)) +
geom_point(data = normalizedDeathDate, mapping = aes(x = timeSince, y = totalDeaths, group = GeoId, color = GeoId)) +
gghighlight(GeoId == 'IT') + scale_y_log10(breaks = c(1, 10, 100, 1000, 10000)) + annotation_logticks(sides="l") +
geom_line(data = third, mapping = aes(x = day, y = growth)) + theme_bw()
#Generate constant growth vectors
day <- seq(0, 30, 1)
third <- data.frame(day = day, growth = ((4/3)^day))
ggplot() + geom_line(data = normalizedDeathDate, mapping = aes(x = timeSince, y = totalDeaths, group = GeoId, color = GeoId)) +
geom_point(data = normalizedDeathDate, mapping = aes(x = timeSince, y = totalDeaths, group = GeoId, color = GeoId)) +
gghighlight(GeoId == 'IT') + scale_y_log10(breaks = c(1, 10, 100, 1000, 10000)) + annotation_logticks(sides="l") +
geom_line(data = third, mapping = aes(x = day, y = growth)) + theme_bw()
ggplot() + geom_line(data = normalizedDeathDate, mapping = aes(x = timeSince, y = totalDeaths, group = GeoId, color = GeoId)) +
geom_point(data = normalizedDeathDate, mapping = aes(x = timeSince, y = totalDeaths, group = GeoId, color = GeoId)) +
gghighlight(GeoId == c('IT', 'US')) + scale_y_log10(breaks = c(1, 10, 100, 1000, 10000)) + annotation_logticks(sides="l") +
geom_line(data = third, mapping = aes(x = day, y = growth)) + theme_bw()
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/getCases.R')
#
limitedCOVID <- filter(COVID, GeoId == c('IT', 'ES', 'KR', 'CN', 'FR', 'JP'))
#Plot case and death curves for each country
library(tidyverse)
library(gghighlight)
library(scales)
library(here)
COVID <- as_tibble(COVID)
#
limitedCOVID <- filter(COVID, GeoId == c('IT', 'ES', 'KR', 'CN', 'FR', 'JP'))
#
limitedCOVID <- filter(COVID, GeoId == 'IT'|'ES'|'KR'|'CN'|'FR'|'JP')
#
limitedCOVID <- filter(COVID, GeoId %in% c('IT', 'ES', 'KR', 'CN', 'FR', 'JP'))
summary(limitedCOVID)
glimpse(limitedCOVID)
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases)) + geom_line() + geom_point() + facet_grid(.~Country)
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases)) + geom_line() +
geom_point() + facet_grid(. ~ Country)
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases)) + geom_line() +
geom_point() + facet_grid(. ~ Countries)
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases)) + geom_line() +
geom_point() + facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases)) + geom_line() +
+ facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases)) + geom_line() +
facet_wrap(. ~ Countries)
#
limitedCOVID <- filter(COVID, GeoId %in% c('IT', 'ES', 'KR', 'CA', 'FR', 'JP'))
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases)) + geom_line() +
facet_wrap(. ~ Countries)
#
limitedCOVID <- filter(COVID, GeoId %in% c('IT', 'ES', 'KR', 'US', 'FR', 'JP'))
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases)) + geom_line() +
facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Cases)) + geom_line() +
facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Cases)) + geom_hist() +
facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Cases)) + geom_histogram() +
facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Cases)) + geom_bar() +
facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Cases)) + geom_point() +
facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID, mapping = aes(x = Day, y = Cases, color = Cases)) + geom_point() +
facet_wrap(. ~ Countries)
#
limitedCOVID <- filter(COVID, (GeoId %in% c('IT', 'ES', 'KR', 'US', 'FR', 'JP')) & (Month == c(2, 3)))
glimpse(limitedCOVID)
ggplot(data = limitedCOVID) + geom_bar(mapping = aes(x = as.factor(DateRep), y = Cases)) +
facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID) + geom_bar(mapping = aes(x = as.factor(DateRep), y = Cases), stat = "identity") +
facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases)) + geom_line() +
facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Deaths)) + geom_line() +
facet_wrap(. ~ Countries)
install.packages(ggsci)
install.packages("ggsci")
library(ggsci)
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Deaths)) + geom_line() +
facet_wrap(. ~ Countries) + scale_fill_npg()
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Deaths)) + geom_line() +
facet_wrap(. ~ Countries) + scale_color_npg()
ggplot(data = limitedCOVID) + geom_line(mapping = aes(x = DateRep, y = Cases)) +
geom_line(mapping = aes(x = DateRep, y = Deaths)) + facet_wrap(. ~ Countries) + scale_color_npg()
ggplot(data = limitedCOVID) + geom_line(mapping = aes(x = DateRep, y = Cases), color = "blue") +
geom_line(mapping = aes(x = DateRep, y = Deaths)) + facet_wrap(. ~ Countries) + scale_color_npg()
pal_jco()
show_col(jco)
show_col("jco")
ggplot(data = limitedCOVID) + geom_line(mapping = aes(x = DateRep, y = Cases), color = "blue") +
geom_line(mapping = aes(x = DateRep, y = Deaths)) + facet_wrap(. ~ Countries) + scale_color_npg()
ggplot(data = limitedCOVID) + geom_line(mapping = aes(x = DateRep, y = c(Cases, Deaths))) + facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID) + geom_line(mapping = aes(x = DateRep, y = Cases)) + facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID) + geom_line(mapping = aes(x = DateRep, y = Cases), color = Cases) + facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID) + geom_line(mapping = aes(x = DateRep, y = Cases), color = as.factor(Cases)) + facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID) + geom_line(mapping = aes(x = DateRep, y = Cases)) + gghighlight(GeoId == 'US') + facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID) + geom_line(mapping = aes(x = DateRep, y = Cases)) + gghighlight(GeoId == 'US') +
facet_wrap(. ~ Countries) + scale_y_log10(breaks = c(1, 10, 100, 1000, 10000)) + annotation_logticks(sides="l")
ggplot(data = limitedCOVID) + geom_line(mapping = aes(x = DateRep, y = Cases)) + gghighlight(GeoId == 'US') +
facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID) + geom_smooth(mapping = aes(x = DateRep, y = Cases)) +
facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID) + geom_smooth(mapping = aes(x = DateRep, y = Cases)) +
facet_wrap(. ~ Countries) + geom_line(mapping = aes(x = DateRep, y = Cases))
ggplot(data = limitedCOVID) + geom_step(mapping = aes(x = DateRep, y = Cases)) +
facet_wrap(. ~ Countries) + geom_line(mapping = aes(x = DateRep, y = Cases))
ggplot(data = limitedCOVID) + geom_step(mapping = aes(x = DateRep, y = Cases)) +
facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID) + geom_line(mapping = aes(x = DateRep, y = Cases)) +
facet_wrap(. ~ Countries)
arrange(COVID, by = Cases)
arrange(COVID, by = Cases, decreasing = TRUE)
arrange(COVID, desc(Cases))
#
limitedCOVID <- filter(COVID, (GeoId %in% c('IT', 'ES', 'KR', 'US', 'FR', 'DE')) & (Month == c(2, 3)))
ggplot(data = limitedCOVID) + geom_line(mapping = aes(x = DateRep, y = Cases)) +
facet_wrap(. ~ Countries)
help("select")
background_limitedCOVID <- select(limitedCOVID, -"Countries")
glimpse(background_limitedCOVID)
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Countries)) +
geom_line(data = background_limitedCOVID, color = "grey", alpha = .2) + geom_line() +
facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Countries)) +
geom_line(data = background_limitedCOVID, color = "grey", alpha = .5) + geom_line() +
facet_wrap(. ~ Countries)
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Countries)) +
geom_line(data = background_limitedCOVID, color = "grey", alpha = .5) + geom_line() +
facet_wrap(. ~ Countries) + theme_bw()
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Countries)) +
geom_line(data = background_limitedCOVID, color = "grey") + geom_line() +
facet_wrap(. ~ Countries) + theme_bw()
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Countries)) +
geom_line(data = background_limitedCOVID, color = "grey", group = Countries) + geom_line() +
facet_wrap(. ~ Countries) + theme_bw()
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Countries)) +
geom_line(data = background_limitedCOVID, color = "grey", group = GeoId) + geom_line() +
facet_wrap(. ~ Countries) + theme_bw()
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = background_limitedCOVID, color = "grey") + geom_line() +
facet_wrap(. ~ Countries) + theme_bw()
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = background_limitedCOVID, color = "grey", alpha = .8) + geom_line() +
facet_wrap(. ~ Countries) + theme_bw()
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = background_limitedCOVID, color = "grey", alpha = .8) + geom_line() +
facet_wrap(. ~ Countries) + theme_bw() + guides(fill=FALSE)
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = background_limitedCOVID, color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw()
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = background_limitedCOVID, color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + ylab()
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = background_limitedCOVID, color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + ylab("")
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = background_limitedCOVID, color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
ggplot(data = limitedCaseSum)) + geom_line(mapping = aes(x = DateRep, y = Cases)) +
geom_line(mapping = aes(x = DateRep, y = totalCases))
ggplot(data = limitedCaseSum)) + geom_line(mapping = aes(x = DateRep, y = Cases)) +
geom_line(mapping = aes(x = DateRep, y = totalCases))
ggplot(data = limitedCaseSum)) + geom_line(mapping = aes(x = DateRep, y = Cases)) +
geom_line(mapping = aes(x = DateRep, y = totalCases))
ggplot(data = limitedCaseSum)) + geom_line(mapping = aes(x = DateRep, y = Cases)) + geom_line(mapping = aes(x = DateRep, y = totalCases))
ggplot(data = limitedCaseSum) + geom_line(mapping = aes(x = DateRep, y = Cases)) + geom_line(mapping = aes(x = DateRep, y = totalCases))
ID <- unique(limitedCOVID$GeoId)
caseSum <- data.frame()
for(i in 1:length(ID)){
tempCountry <- limitedCOVID %>% filter(GeoId == ID[i]) %>% arrange(DateRep)
tempCountry[, "totalCases"] <- cumsum(tempCountry$Cases)
limitedCaseSum <- rbind(caseSum, tempCountry)
}
ggplot(data = limitedCaseSum) + geom_line(mapping = aes(x = DateRep, y = Cases)) + geom_line(mapping = aes(x = DateRep, y = totalCases))
ggplot(data = limitedCaseSum) + geom_line(mapping = aes(x = DateRep, y = Cases)) +
geom_line(mapping = aes(x = DateRep, y = totalCases)) + scale_y_continuous(sec.axis = sec_axis(~.*5))
ggplot(data = limitedCaseSum) + geom_line(mapping = aes(x = DateRep, y = Cases)) +
geom_bar(mapping = aes(x = DateRep, y = totalCases)) + scale_y_continuous(sec.axis = sec_axis(~.*5))
ggplot(data = limitedCaseSum) + geom_line(mapping = aes(x = DateRep, y = Cases)) +
geom_bar(mapping = aes(x = DateRep, y = totalCases), stat = "identity") + scale_y_continuous(sec.axis = sec_axis(~.*5))
ggplot(data = limitedCaseSum) + geom_line(mapping = aes(x = DateRep, y = Cases)) +
geom_bar(mapping = aes(x = DateRep, y = totalCases), stat = "identity") + scale_y_log10(breaks = c(100, 1000, 10000, 100000)) + scale_y_continuous(sec.axis = sec_axis(~.*5))
ggplot(data = limitedCaseSum) + geom_line(mapping = aes(x = DateRep, y = Cases)) +
geom_bar(mapping = aes(x = DateRep, y = totalCases), stat = "identity") + scale_y_log10s(sec.axis = sec_axis(~.*5))
ggplot(data = limitedCaseSum) + geom_line(mapping = aes(x = DateRep, y = Cases)) +
geom_bar(mapping = aes(x = DateRep, y = totalCases), stat = "identity") + scale_y_log10(sec.axis = sec_axis(~.*5))
ggplot(data = limitedCaseSum) + geom_line(mapping = aes(x = DateRep, y = Cases)) +
geom_bar(mapping = aes(x = DateRep, y = totalCases), stat = "identity") + scale_y_continuous(sec.axis = sec_axis(~.*5))
ggplot(data = limitedCaseSum) + geom_line(mapping = aes(x = DateRep, y = totalCases)) +
geom_bar(mapping = aes(x = DateRep, y = Cases), stat = "identity") + scale_y_continuous(sec.axis = sec_axis(~.*5))
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = background_limitedCOVID, color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
test <- mutate(limitedCOVID, Count = "daily")
summarize(test)
glimpse(test)
limitedCOVID <- mutate(limitedCOVID, Count = "daily")
testnew <- limitedCOVID
testnew[, "Count"] <- "total"
glimpse(testnew)
limitedCOVID <- mutate(limitedCOVID, Count = "daily")
ID <- unique(limitedCOVID$GeoId)
limitedCOVIDSum <- data.frame()
for(i in 1:length(ID)){
tempCountry <- limitedCOVID %>% filter(GeoId == ID[i]) %>% arrange(DateRep)
tempCountry[, "Cases"] <- cumsum(tempCountry$Cases)
tempCountry[, "Count"] <- "total"
limitedCOVIDSum <- bind_rows(limitedCOVIDSum, tempCountry)
}
view(limitedCOVIDSum)
limitedCOVID <- bind_rows(limitedCOVID, limitedCOVIDSum)
view(limitedCOVID)
ggplot(data = limitedCOVID, mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = background_limitedCOVID, color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
ggplot(data = filter(limitedCOVID, Count = "daily"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = background_limitedCOVID, color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
ggplot(data = filter(limitedCOVID, Count == "daily"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = background_limitedCOVID, color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
limitedCOVID <- bind_rows(limitedCOVID, limitedCOVIDSum)
background_limitedCOVID <- select(limitedCOVID, -"Countries")
ggplot(data = filter(limitedCOVID, Count == "daily"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = background_limitedCOVID, color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
ggplot(data = filter(limitedCOVID, Count == "daily"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_limitedCOVID, Count == "daily"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
ggplot(data = filter(limitedCOVID, Count == "total"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_limitedCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
#Plot faceted daily and total case values
ggplot(data = filter(lateCOVID, Count == "daily"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "daily"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
#Mutate dataset to get total case data
lateCOVID <- filter(COVID, (Month == c(2, 3)))
lateCOVID <- mutate(lateCOVID, Count = "daily")
ID <- unique(lateCOVID$GeoId)
lateCOVIDSum <- data.frame()
for(i in 1:length(ID)){
tempCountry <- lateCOVID %>% filter(GeoId == ID[i]) %>% arrange(DateRep)
tempCountry[, "Cases"] <- cumsum(tempCountry$Cases)
tempCountry[, "Count"] <- "total"
lateCOVIDSum <- bind_rows(lateCOVIDSum, tempCountry)
}
lateCOVID <- bind_rows(lateCOVID, lateCOVIDSum)
background_lateCOVID <- select(lateCOVID, -"Countries")
#Plot faceted daily and total case values
ggplot(data = filter(lateCOVID, Count == "daily"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "daily"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
summary(lateCOVID)
upperCOVID <- filter(lateCOVID, Cases >= 500)
upperID <- unique(upperCOVID$GeoId)
lateCOVID <- filter(lateCOVID, GeoId %in% upperID)
unique(lateCOVID$GeoIe)
unique(lateCOVID$GeoId)
background_lateCOVID <- select(lateCOVID, -"Countries")
#Plot faceted daily and total case values
ggplot(data = filter(lateCOVID, Count == "daily"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "daily"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
ggplot(data = filter(lateCOVID, Count == "total"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
#Normalize start date
normalizedLateCOVID <- data.frame()
#Normalize start date
normalizedLateCOVID <- data.frame()
for(i in 1:length(upperID)){
tempLateCOVID <- filter(lateCOVID, GeoId == upperID[i]) %>% arrange(DateRep)
tempLateCOVID[, "timeSince"] <- difftime(tempLateCOVID$DateRep, tempLateCOVID$DateRep[1], units = "days")
normalizedLateCOVID <- rbind(normalizedLateCOVID, tempLateCOVID)
}
background_normalizedLateCOVID <- select(normalizedLateCOVID, -"Countries")
ggplot(data = filter(normalizedLateCOVID, Count == "total"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
ggplot(data = filter(normalizedLateCOVID, Count == "total"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
for(i in 1:length(upperID)){
tempLateCOVID <- filter(lateCOVID, GeoId == upperID[i]) %>% arrange(DateRep)
tempLateCOVID[, "timeSince"] <- difftime(tempLateCOVID$DateRep, tempLateCOVID$DateRep[1], units = "days")
normalizedLateCOVID <- rbind(normalizedLateCOVID, tempLateCOVID)
}
background_normalizedLateCOVID <- select(normalizedLateCOVID, -"Countries")
ggplot(data = filter(normalizedLateCOVID, Count == "total"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
View(normalizedLateCOVID)
ggplot(data = filter(normalizedLateCOVID, Count == "total"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
ggplot(data = filter(normalizedLateCOVID, Count == "total"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
ggplot(data = filter(normalizedLateCOVID, Count == "total"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
##Daily values
ggplot(data = filter(normalizedLateCOVID, Count == "daily"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
##Daily values
ggplot(data = filter(normalizedLateCOVID, Count == "daily"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID, Count == "daily"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("")
##Total values
ggplot(data = filter(normalizedLateCOVID, Count == "total"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("") + scale_y_log10(breaks = c(100, 1000, 10000, 100000)) + annotation_logticks(sides="l")
##Total values
ggplot(data = filter(normalizedLateCOVID, Count == "total"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID, Count == "total"), color = "grey", alpha = .8) + geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) + theme_bw() + xlab("") + scale_y_log10(breaks = c(100, 1000, 10000, 100000)) + annotation_logticks(sides="l") + ylim(1, 100000)
##Total values
ggplot(data = filter(normalizedLateCOVID, Count == "total"),
mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID, Count == "total"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
scale_y_log10(breaks = c(100, 1000, 10000, 100000), limits = c(1, 100000)) +
annotation_logticks(sides="l") + ylim(1, 100000) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
##Total values
ggplot(data = filter(normalizedLateCOVID, Count == "total"),
mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID, Count == "total"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
scale_y_log10(breaks = c(100, 1000, 10000, 100000), limits = c(1, 100000)) +
annotation_logticks(sides="l") + ylim(1, 100000) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
##Total values
ggplot(data = filter(normalizedLateCOVID, Count == "total"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID, Count == "total"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
scale_y_log10(breaks = c(100, 1000, 10000, 100000), limits = c(1, 100000)) +
annotation_logticks(sides="l") + ylim(1, 100000) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
#Plot cumulative case curves for all countries in datset
ggplot(data = caseSum, mapping = aes(x = DateRep, y = totalCases, group = GeoId, color = GeoId)) +
geom_line() + gghighlight(GeoId == c('US', 'ES', 'IT'))
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/facetCOVIDCharts.R')
library(scales)
library(here)
library(ggsci)
source(here("scripts", "getCases.R"))
source(here("scripts/getCases.R"))
source(here("./scripts/getCases.R"))
source("./scripts/getCases.R")
source("scripts/getCases.R")
source("getCases.R")
setwd("Desktop/Storage/Research/Computational/R/COVID-19")
source("getCases.R")
source("scripts/getCases.R")
COVID <- as_tibble(COVID)
#Limit dataset to 6 countries, mutate to get total case data
limitedCOVID <- filter(COVID, GeoId %in% c('IT', 'ES', 'KR', 'US', 'FR', 'DE'))
limitedCOVID <- mutate(limitedCOVID, Count = "daily")
ID <- unique(limitedCOVID$GeoId)
limitedCOVIDSum <- data.frame()
for(i in 1:length(ID)){
tempCountry <- limitedCOVID %>% filter(GeoId == ID[i]) %>% arrange(DateRep)
tempCountry[, "Cases"] <- cumsum(tempCountry$Cases)
tempCountry[, "Count"] <- "total"
limitedCOVIDSum <- bind_rows(limitedCOVIDSum, tempCountry)
}
limitedCOVID <- bind_rows(limitedCOVID, limitedCOVIDSum)
background_limitedCOVID <- select(limitedCOVID, -"Countries")
#Plot faceted daily and total case values for 6 countries
limitedCOVIDDaily <- ggplot(data = filter(limitedCOVID, Count == "daily"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_limitedCOVID, Count == "daily"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
limitedCOVIDTotal <- ggplot(data = filter(limitedCOVID, Count == "total"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_limitedCOVID, Count == "total"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
ggsave(plot = limitedCOVIDDaily, here("figures", "2020-03-26_Limited-Facet_Daily-Cases.png"), width = 10, height = 6)
ggsave(plot = limitedCOVIDTotal, here("figures", "2020-03-26_Limited-Facet_Case-Total.png"), width = 10, height = 6)
#Mutate dataset to get total case data
lateCOVID <- COVID
lateCOVID <- mutate(lateCOVID, Count = "daily")
ID <- unique(lateCOVID$GeoId)
lateCOVIDSum <- data.frame()
for(i in 1:length(ID)){
tempCountry <- lateCOVID %>% filter(GeoId == ID[i]) %>% arrange(DateRep)
tempCountry[, "Cases"] <- cumsum(tempCountry$Cases)
tempCountry[, "Count"] <- "total"
lateCOVIDSum <- bind_rows(lateCOVIDSum, tempCountry)
}
lateCOVID <- bind_rows(lateCOVID, lateCOVIDSum)
upperCOVID <- filter(lateCOVID, Cases >= 1400)
upperID <- unique(upperCOVID$GeoId)
lateCOVID <- filter(lateCOVID, GeoId %in% upperID)
background_lateCOVID <- select(lateCOVID, -"Countries")
##Daily values
ggplot(data = filter(lateCOVID, Count == "daily"),
mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "daily"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
##Total values
ggplot(data = filter(lateCOVID, Count == "total"), mapping = aes(x = DateRep, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_lateCOVID, Count == "total"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("")
#Normalize start date
normalizedLateCOVID <- data.frame()
for(i in 1:length(upperID)){
tempLateCOVID <- filter(lateCOVID, GeoId == upperID[i]) %>% arrange(DateRep)
tempLateCOVID[, "timeSince"] <- difftime(tempLateCOVID$DateRep, tempLateCOVID$DateRep[1], units = "days")
normalizedLateCOVID <- rbind(normalizedLateCOVID, tempLateCOVID)
}
background_normalizedLateCOVID <- select(normalizedLateCOVID, -"Countries")
##Daily values
facetNormalizedCOVIDDaily <- ggplot(data = filter(normalizedLateCOVID, Count == "daily"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID, Count == "daily"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlab("Days Since First Case")
ggsave(plot = facetNormalizedCOVIDDaily, here("figures", "2020-03-26_Facet_Daily-Cases.png"), width = 10, height = 7)
#Select for common start case number
lateCOVID100 <- filter(normalizedLateCOVID, Cases >= 100)
normalizedLateCOVID100 <- data.frame()
for(i in 1:length(upperID)){
tempLateCOVID100 <- filter(lateCOVID100, GeoId == upperID[i]) %>% arrange(DateRep)
tempLateCOVID100[, "timeSince"] <- difftime(tempLateCOVID100$DateRep, tempLateCOVID100$DateRep[1], units = "days")
normalizedLateCOVID100 <- rbind(normalizedLateCOVID100, tempLateCOVID100)
}
background_normalizedLateCOVID100 <- select(normalizedLateCOVID100, -"Countries")
##Total values
facetNormalizedCOVIDTotal_lin <- ggplot(data = filter(normalizedLateCOVID100, Count == "total"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID100, Count == "total"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
facet_wrap(. ~ Countries) +
theme_bw() +
xlim(0, 30) +
xlab("")
facetNormalizedCOVIDTotal_exp <- ggplot(data = filter(normalizedLateCOVID100, Count == "total"), mapping = aes(x = timeSince, y = Cases, color = Countries, group = GeoId)) +
geom_line(data = filter(background_normalizedLateCOVID100, Count == "total"), color = "grey", alpha = .8) +
geom_line(show.legend = FALSE) +
scale_y_log10(breaks = c(100, 1000, 10000, 100000), limits = c(100, 100000)) +
annotation_logticks(sides="l") +
facet_wrap(. ~ Countries) +
xlim(0, 30) +
theme_bw() +
xlab("Days Since 100th Case")
ggsave(plot = facetNormalizedCOVIDTotal_lin, here("figures", "2020-03-26_Facet-Lin_Case-Total.png"), width = 10, height = 7)
ggsave(plot = facetNormalizedCOVIDTotal_exp, here("figures", "2020-03-26_Facet-Exp_Case-Total.png"), width = 10, height = 7)
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/facetCOVIDCharts.R')
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/facetCOVIDCharts.R')
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/facetCOVIDCharts.R')
source('~/Desktop/Storage/Research/Computational/R/COVID-19/scripts/facetCOVIDCharts.R')
